{"version":3,"file":"static/js/22.87ffeff8.chunk.js","mappings":"6LACA,EAAuB,0BAAvB,EAAyD,2BAAzD,EAA4F,2BAA5F,EAA6H,yB,SCkBlHA,EAAS,eAACC,EAAD,uDAAQ,GAAR,OAClBC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,SAACC,EAAIC,GAWvD,OARED,IAFFC,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAGT,GAAE,GAbe,ECnBPG,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EACtBC,EAAe,SAAAH,GAAK,OAAIA,EAAMI,OAAOA,MAAjB,EACpBC,EAAkB,SAAAL,GAAK,OAAIA,EAAMC,SAASK,SAAnB,EACvBC,EAAc,SAAAP,GAAK,OAAIA,EAAMC,SAASO,KAAnB,E,iBCM1BC,EAAc,WAClB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACXf,GAAWgB,EAAAA,EAAAA,IAAYlB,GAEvBmB,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,cAAlBT,EAAR,EAAQA,KAAMU,EAAd,EAAcA,MAED,SAATV,EACFC,EAAQS,GACU,WAATV,GACTG,EAAUO,EAEb,EAsBKC,EAAY,WAChBV,EAAQ,IACRE,EAAU,GACX,EAED,OACE,kBAAMS,SA1Ba,SAAAJ,GACnBA,EAAEK,iBAEF,IAAMC,EAAU,CACd9B,GAAIN,IACJsB,KAAAA,EACAE,OAAAA,GAGFZ,EAASyB,MACP,SAAAC,GAAC,OACCA,EAAEhB,KAAKiB,gBAAkBH,EAAQd,KAAKiB,eACtCD,EAAEd,SAAWY,EAAQZ,MAFtB,IAICgB,MAAM,GAAD,OAAIlB,EAAJ,4BACLI,GAASe,EAAAA,EAAAA,IAAWL,IAExBH,GACD,EAQ+BS,UAAWC,EAAzC,WACE,mBAAOD,UAAWC,EAAWC,QAAQ,GAArC,UAAwC,QAEtC,kBACEF,UAAWC,EACXE,KAAK,OACLvB,KAAK,OACLU,MAAOV,EACPwB,SAAUjB,EACVkB,YAAY,OACZC,QAAQ,yHACRC,MAAM,0IAENC,UAAQ,QAGZ,mBAAOR,UAAWC,EAAWC,QAAQ,GAArC,UAAwC,UAEtC,kBACEF,UAAWC,EACXE,KAAK,MACLvB,KAAK,SACLU,MAAOR,EACPsB,SAAUjB,EACVkB,YAAY,SACZC,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZ,mBAAQL,KAAK,SAASH,UAAWC,EAAjC,SAA0C,kBAK/C,EAEDvB,EAAY+B,WAAa,CACvB7B,KAAM8B,IAAAA,OAAAA,WACN5B,OAAQ4B,IAAAA,OAAAA,WACRlB,SAAUkB,IAAAA,KAAAA,YAGZ,QC7FA,EAA8B,iCAA9B,EAAsE,0BAAtE,EAAwG,2BAAxG,EAAyI,yBCkDzI,EA5CoB,WAClB,IAAM1B,GAAWC,EAAAA,EAAAA,MACXZ,GAASa,EAAAA,EAAAA,IAAYd,GAQrBuC,GAPWzB,EAAAA,EAAAA,IAAYlB,GAGXK,QAAO,SAAAqB,GAAO,OAC5BA,EAAQd,KAAKiB,cAAce,SAASvC,EAAOwB,cADf,IAMhC,OACE,eAAIG,UAAWC,EAAf,SACGU,EAAiBE,KAAI,YAA2B,IAAxBjD,EAAuB,EAAvBA,GAAIgB,EAAmB,EAAnBA,KAAME,EAAa,EAAbA,OACjC,OACE,gBAAakB,UAAWC,EAAxB,WACE,eAAGD,UAAWC,EAAd,UACGrB,EAAK,KAAGE,MAEX,mBACEqB,KAAK,SACLW,QAAS,kBAAM9B,GAAS+B,EAAAA,EAAAA,IAAcnD,GAA7B,EACToC,UAAWC,EAHb,SAIC,aARMrC,EAaZ,KAGN,ECtCD,EAAwB,sBAAxB,EAAsD,sB,SCkCtD,EA5Be,WACb,IAAMoB,GAAWC,EAAAA,EAAAA,MACXZ,GAASa,EAAAA,EAAAA,IAAYd,GAM3B,OACE,mBAAO4B,UAAWC,EAAlB,UAA6B,wBAE3B,kBACED,UAAWC,EACXE,KAAK,OACLvB,KAAMP,EACNiB,MAAOjB,EACP+B,SAZoB,SAAAhB,GACxBJ,GAASgC,EAAAA,EAAAA,IAAU5B,EAAE6B,OAAO3B,OAC7B,EAWKe,YAAY,4BAInB,EC3BD,EAA0B,qBAA1B,EAAuD,mB,SCkCvD,EAxBe,WACb,IAAMrB,GAAWC,EAAAA,EAAAA,MACXV,GAAYW,EAAAA,EAAAA,IAAYZ,GACxBG,GAAQS,EAAAA,EAAAA,IAAYV,GAM1B,OAJA0C,EAAAA,EAAAA,YAAU,WACRlC,GAASmC,EAAAA,EAAAA,MACV,GAAE,CAACnC,KAGF,iCACE,wBAAI,iBACJ,qBAASgB,UAAWC,EAApB,UACG1B,IAAcE,IAAS,SAAC2C,EAAA,EAAD,KACxB,eAAIpB,UAAWC,EAAf,SAA0B,eAC1B,SAAC,EAAD,KACA,eAAID,UAAWC,EAAf,SAA0B,cAC1B,SAAC,EAAD,KACA,SAAC,EAAD,SAIP,C,mCCxBD,IAAIoB,EAAuBC,EAAQ,IAEnC,SAASC,IAAkB,CAC3B,SAASC,IAA2B,CACpCA,EAAuBC,kBAAoBF,EAE3CG,EAAOC,QAAU,WACf,SAASC,EAAKC,EAAOC,EAAUC,EAAeC,EAAUC,EAAcC,GACpE,GAAIA,IAAWb,EAAf,CAIA,IAAIc,EAAM,IAAIC,MACZ,mLAKF,MADAD,EAAIvD,KAAO,sBACLuD,CAPL,CAQF,CAED,SAASE,IACP,OAAOT,CACR,CAHDA,EAAKU,WAAaV,EAMlB,IAAIW,EAAiB,CACnBC,MAAOZ,EACPa,OAAQb,EACRc,KAAMd,EACNe,KAAMf,EACN9C,OAAQ8C,EACRgB,OAAQhB,EACRiB,OAAQjB,EACRkB,OAAQlB,EAERmB,IAAKnB,EACLoB,QAASX,EACTY,QAASrB,EACTsB,YAAatB,EACbuB,WAAYd,EACZe,KAAMxB,EACNyB,SAAUhB,EACViB,MAAOjB,EACPkB,UAAWlB,EACXmB,MAAOnB,EACPoB,MAAOpB,EAEPqB,eAAgBlC,EAChBC,kBAAmBF,GAKrB,OAFAgB,EAAe7B,UAAY6B,EAEpBA,CACR,C,oBC/CCb,EAAOC,QAAUL,EAAQ,IAARA,E,8BCNnBI,EAAOC,QAFoB,8C","sources":["webpack://tweets-app/./src/components/ContactForm/ContactForm.module.css?b5b2","../node_modules/nanoid/index.browser.js","redux/selectors.js","components/ContactForm/ContactForm.jsx","webpack://tweets-app/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://tweets-app/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://tweets-app/./src/App.module.css?42a9","pages/Tweets/Tweets.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"btn\":\"ContactForm_btn__wll+u\"};","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","export const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { nanoid } from 'nanoid';\nimport { selectContacts } from 'redux/selectors';\nimport { addContact } from 'redux/operations';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    if (name === 'name') {\n      setName(value);\n    } else if (name === 'number') {\n      setNumber(value);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const contact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n\n    contacts.some(\n      i =>\n        i.name.toLowerCase() === contact.name.toLowerCase() ||\n        i.number === contact.number\n    )\n      ? alert(`${name} is already in contacts`)\n      : dispatch(addContact(contact));\n\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={css.form}>\n      <label className={css.label} htmlFor=\"\">\n        Name\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          placeholder=\"Name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. \n                    For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={css.label} htmlFor=\"\">\n        Number\n        <input\n          className={css.input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          placeholder=\"Number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button type=\"submit\" className={css.btn}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nContactForm.prototypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.number.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\",\"item\":\"ContactList_item__EZYHO\",\"value\":\"ContactList_value__cwfRG\",\"btn\":\"ContactList_btn__6Piat\"};","import PropTypes from 'prop-types';\nimport css from './ContactList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { selectContacts, selectFilter } from 'redux/selectors';\nimport { deleteContact } from 'redux/operations';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n  const contacts = useSelector(selectContacts);\n\n  const findContacts = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n  const filteredContacts = findContacts();\n\n  return (\n    <ul className={css.contactList}>\n      {filteredContacts.map(({ id, name, number }) => {\n        return (\n          <li key={id} className={css.item}>\n            <p className={css.value}>\n              {name}: {number}\n            </p>\n            <button\n              type=\"button\"\n              onClick={() => dispatch(deleteContact(id))}\n              className={css.btn}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  filteredContacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import PropTypes from 'prop-types';\nimport css from './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { setFilter } from 'redux/filterSlice';\nimport { selectFilter } from 'redux/selectors';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const changeFilterInput = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <label className={css.label}>\n      Find Contact By Name\n      <input\n        className={css.input}\n        type=\"text\"\n        name={filter}\n        value={filter}\n        onChange={changeFilterInput}\n        placeholder=\"Find contacts by name\"\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  changeFilterInput: PropTypes.func,\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"App_section__jwu5t\",\"title\":\"App_title__YS7Xx\"};","import ContactForm from '../../components/ContactForm/ContactForm';\nimport ContactList from '../../components/ContactList/ContactList';\nimport Filter from '../../components/Filter/Filter';\n\nimport css from '../../App.module.css';\nimport { fetchContacts } from 'redux/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectError, selectIsLoading } from 'redux/selectors';\nimport { useEffect } from 'react';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Tweets = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <h2>Tweets Card</h2>\n      <section className={css.section}>\n        {isLoading && !error && <Loader />}\n        <h1 className={css.title}>Phonebook</h1>\n        <ContactForm />\n        <h2 className={css.title}>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </section>\n    </>\n  );\n};\n\nexport default Tweets;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","useSelector","handleChange","e","currentTarget","value","resetForm","onSubmit","preventDefault","contact","some","i","toLowerCase","alert","addContact","className","css","htmlFor","type","onChange","placeholder","pattern","title","required","prototypes","PropTypes","filteredContacts","includes","map","onClick","deleteContact","setFilter","target","useEffect","fetchContacts","Loader","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}